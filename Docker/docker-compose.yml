services:
  db:
    image: postgres:14
    container_name: db_postgres
    
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db-store:/var/lib/postgresql/data
      - ../DB/DDL:/docker-entrypoint-initdb.d
  # Redis キャッシュサーバー
  cache:
    image: redis:7-alpine
    container_name: app-cache
    ports:
      - "6379:6379"
    volumes:
      - ../app_cache/redis.conf:/etc/redis/redis.conf:ro
      - cache_data:/data
      - cache_logs:/var/log/redis
    command: redis-server /etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  # バッチアプリケーション
  batch:
    build:
      context: ..
      dockerfile: Docker/Dockerfile.batch
    container_name: app-batch
    environment:
      NODE_ENV: ${NODE_ENV}
      CACHE_HOST: cache
      CACHE_PORT: 6379
      LOG_LEVEL: ${LOG_LEVEL:-info}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - cache
      - db
    restart: unless-stopped
    volumes:
      - batch_logs:/app/logs

  # Webアプリケーション
  web:
    build:
      context: ..
      dockerfile: Docker/Dockerfile.web
    container_name: app-web
    ports:
      - "${API_PORT:-3000}:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      CACHE_HOST: cache
      CACHE_PORT: 6379
      LOG_LEVEL: ${LOG_LEVEL:-info}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - cache
      - db
    restart: unless-stopped
    volumes:
      - web_logs:/app/logs

volumes:
  db-store:
  cache_data:
  cache_logs:
  batch_logs:
  web_logs: